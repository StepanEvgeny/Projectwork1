import sqlite3

DB_PATH = 'schedule.db'
TIMEZONE = '–ø–æ –ú–°–ö'

def get_schedule_for_day(day: str) -> str:
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        cursor.execute("SELECT id, time, subject FROM schedule WHERE day = ? ORDER BY time", (day,))
        lessons = cursor.fetchall()
        conn.close()
    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {e}"

    if not lessons:
        return f"‚ùå –ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ {day}."

    result = f"üìÖ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day} ({TIMEZONE}):*\n\n"
    for lesson_id, time, subject in lessons:
        result += f"#{lesson_id} ‚è∞ {time} ‚Äî {subject}\n"
    return result

def get_week_schedule() -> str:
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        cursor.execute("SELECT day, time, subject FROM schedule ORDER BY day, time")
        lessons = cursor.fetchall()
        conn.close()
    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {e}"

    if not lessons:
        return "‚ùå –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ."

    result = f"üìö *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é ({TIMEZONE}):*\n\n"
    days = {}
    for day, time, subject in lessons:
        days.setdefault(day, []).append(f"‚è∞ {time} ‚Äî {subject}")

    for day in ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']:
        if day in days:
            result += f"*{day}:*\n" + "\n".join(days[day]) + "\n\n"
    return result

def add_lesson(day: str, time: str, subject: str) -> str:
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        cursor.execute("INSERT INTO schedule (day, time, subject) VALUES (?, ?, ?)", (day, time, subject))
        conn.commit()
        conn.close()
        return f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {day}, {time}, {subject}"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {e}"

def delete_lesson_by_id(lesson_id: int) -> str:
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        cursor.execute("DELETE FROM schedule WHERE id = ?", (lesson_id,))
        if cursor.rowcount == 0:
            return "‚ö†Ô∏è –£—Ä–æ–∫ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω."
        conn.commit()
        conn.close()
        return f"‚úÖ –£—Ä–æ–∫ #{lesson_id} —É–¥–∞–ª—ë–Ω."
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}"
